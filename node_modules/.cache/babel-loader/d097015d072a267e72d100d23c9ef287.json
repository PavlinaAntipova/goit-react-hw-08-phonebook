{"ast":null,"code":"var _jsxFileName = \"/Users/pashtet/Documents/GitHub/goit-react-hw-07-phonebook/src/components/ContactsList/ContactsList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/slices';\nimport ContactItem from '../ContactItem';\nimport s from './ContactsList.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ContactsList() {\n  _s();\n\n  const filter = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => {\n    const initState = state.contacts.items;\n    const normalizeName = filter.toLocaleLowerCase();\n    const filteredContacts = initState.filter(contact => contact.name.toLocaleLowerCase().includes(normalizeName));\n    return filteredContacts;\n  });\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: s.title,\n      children: \"Contacts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: contacts.length ? contacts.map(contact => /*#__PURE__*/_jsxDEV(ContactItem, {\n        id: contact.id,\n        name: contact.name,\n        number: contact.number\n      }, contact.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)) : 'No contacts here'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ContactsList, \"fhsnx7XLK5kNRmzyOsbuyaSmB0Q=\", false, function () {\n  return [useSelector, useDispatch, useSelector];\n});\n\n_c = ContactsList;\nexport default ContactsList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactsList\");","map":{"version":3,"sources":["/Users/pashtet/Documents/GitHub/goit-react-hw-07-phonebook/src/components/ContactsList/ContactsList.jsx"],"names":["React","useEffect","useDispatch","useSelector","fetchContacts","ContactItem","s","ContactsList","filter","state","contacts","dispatch","initState","items","normalizeName","toLocaleLowerCase","filteredContacts","contact","name","includes","title","length","map","id","number"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,cAA9B;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,CAAP,MAAc,2BAAd;;;;AAEA,SAASC,YAAT,GAAwB;AAAA;;AACtB,QAAMC,MAAM,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,QAAN,CAAeF,MAAzB,CAA1B;AACA,QAAMG,QAAQ,GAAGT,WAAW,EAA5B;AAEA,QAAMQ,QAAQ,GAAGP,WAAW,CAACM,KAAK,IAAI;AACpC,UAAMG,SAAS,GAAGH,KAAK,CAACC,QAAN,CAAeG,KAAjC;AACE,UAAMC,aAAa,GAAGN,MAAM,CAACO,iBAAP,EAAtB;AACA,UAAMC,gBAAgB,GAAGJ,SAAS,CAACJ,MAAV,CAAiBS,OAAO,IACjDA,OAAO,CAACC,IAAR,CAAaH,iBAAb,GAAiCI,QAAjC,CAA0CL,aAA1C,CADyB,CAAzB;AAEF,WAAOE,gBAAP;AACD,GAN2B,CAA5B;AAQAf,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,QAAQ,CAACP,aAAa,EAAd,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT;AAKA,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAEE,CAAC,CAACc,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,gBAEGV,QAAQ,CAACW,MAAT,GACGX,QAAQ,CAACY,GAAT,CAAaL,OAAO,iBACpB,QAAC,WAAD;AAEI,QAAA,EAAE,EAAEA,OAAO,CAACM,EAFhB;AAGI,QAAA,IAAI,EAAEN,OAAO,CAACC,IAHlB;AAII,QAAA,MAAM,EAAED,OAAO,CAACO;AAJpB,SACSP,OAAO,CAACM,EADjB;AAAA;AAAA;AAAA;AAAA,cADA,CADH,GASG;AAXN;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAkBD;;GAnCQhB,Y;UACQJ,W,EACED,W,EAEAC,W;;;KAJVI,Y;AAqCT,eAAeA,YAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/slices';\n\nimport ContactItem from '../ContactItem';\nimport s from './ContactsList.module.css';\n\nfunction ContactsList() {\n  const filter = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  const contacts = useSelector(state => {\n    const initState = state.contacts.items;\n      const normalizeName = filter.toLocaleLowerCase();\n      const filteredContacts = initState.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizeName));\n    return filteredContacts;\n  });\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, []);\n\n  \n  return (\n    <>\n      <h2 className={s.title}>Contacts</h2>\n      <ul>\n        \n        {contacts.length\n          ? contacts.map(contact => (\n            <ContactItem\n                key={contact.id}\n                id={contact.id}\n                name={contact.name}\n                number={contact.number}\n              />\n            ))\n          : 'No contacts here'}\n      </ul>\n    </>\n  );\n}\n\nexport default ContactsList;\n\n"]},"metadata":{},"sourceType":"module"}