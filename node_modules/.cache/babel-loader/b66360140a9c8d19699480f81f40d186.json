{"ast":null,"code":"import _defineProperty from\"/Users/pashtet/Documents/GitHub/goit-react-hw-06-phonebook/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _toConsumableArray from\"/Users/pashtet/Documents/GitHub/goit-react-hw-06-phonebook/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";var _createReducer;import{combineReducers}from'redux';import{createReducer}from'@reduxjs/toolkit';import{persistReducer}from'redux-persist';import storage from'redux-persist/lib/storage';import{addContact,deleteContact,addFilter}from'./actions';var persistConfig={key:'contacts',storage:storage,blacklist:['filter']};var contactsReducer=createReducer([],(_createReducer={},_defineProperty(_createReducer,addContact,function(state,action){return[].concat(_toConsumableArray(state),[action.payload]);}),_defineProperty(_createReducer,deleteContact,function(state,action){return state.filter(function(contact){return contact.id!==action.payload;});}),_createReducer));var filterReducer=createReducer('',_defineProperty({},addFilter,function(state,action){return action.payload;}));var rootReducer=combineReducers({items:contactsReducer,filter:filterReducer});export var persistedReducer=persistReducer(persistConfig,rootReducer);","map":{"version":3,"sources":["/Users/pashtet/Documents/GitHub/goit-react-hw-06-phonebook/src/redux/reducers.js"],"names":["combineReducers","createReducer","persistReducer","storage","addContact","deleteContact","addFilter","persistConfig","key","blacklist","contactsReducer","state","action","payload","filter","contact","id","filterReducer","rootReducer","items","persistedReducer"],"mappings":"6TAAA,OAASA,eAAT,KAAgC,OAAhC,CACA,OAASC,aAAT,KAA8B,kBAA9B,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,MAAOC,CAAAA,OAAP,KAAoB,2BAApB,CACA,OAASC,UAAT,CAAqBC,aAArB,CAAoCC,SAApC,KAAqD,WAArD,CAEA,GAAMC,CAAAA,aAAa,CAAG,CACpBC,GAAG,CAAE,UADe,CAEpBL,OAAO,CAAPA,OAFoB,CAGpBM,SAAS,CAAE,CAAC,QAAD,CAHS,CAAtB,CAMA,GAAMC,CAAAA,eAAe,CAAGT,aAAa,CAAC,EAAD,mDAChCG,UADgC,CACnB,SAACO,KAAD,CAAQC,MAAR,qCAAuBD,KAAvB,GAA8BC,MAAM,CAACC,OAArC,IADmB,iCAEhCR,aAFgC,CAEhB,SAACM,KAAD,CAAQC,MAAR,QAAmBD,CAAAA,KAAK,CAACG,MAAN,CAAa,SAAAC,OAAO,QAAIA,CAAAA,OAAO,CAACC,EAAR,GAAeJ,MAAM,CAACC,OAA1B,EAApB,CAAnB,EAFgB,kBAArC,CAKA,GAAMI,CAAAA,aAAa,CAAGhB,aAAa,CAAC,EAAD,oBAC9BK,SAD8B,CAClB,SAACK,KAAD,CAAQC,MAAR,QAAmBA,CAAAA,MAAM,CAACC,OAA1B,EADkB,EAAnC,CAIA,GAAMK,CAAAA,WAAW,CAAGlB,eAAe,CAAC,CAAEmB,KAAK,CAAET,eAAT,CAA0BI,MAAM,CAAEG,aAAlC,CAAD,CAAnC,CACA,MAAO,IAAMG,CAAAA,gBAAgB,CAAGlB,cAAc,CAACK,aAAD,CAAgBW,WAAhB,CAAvC","sourcesContent":["import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { addContact, deleteContact, addFilter } from './actions';\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n}\n\nconst contactsReducer = createReducer([], {\n    [addContact]: (state, action) => [...state, action.payload],\n    [deleteContact]: (state, action) => state.filter(contact => contact.id !== action.payload),\n});\n\nconst filterReducer = createReducer('', {\n    [addFilter]: (state, action) => action.payload,\n});\n\nconst rootReducer = combineReducers({ items: contactsReducer, filter: filterReducer });\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);\n"]},"metadata":{},"sourceType":"module"}