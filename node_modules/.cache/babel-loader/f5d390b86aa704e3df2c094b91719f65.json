{"ast":null,"code":"import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { addContact, deleteContact, addFilter } from './actions';\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter']\n};\nconst contactsReducer = createReducer([], {\n  [addContact]: (state, action) => [...state, action.payload],\n  [deleteContact]: (state, action) => state.filter(contact => contact.id !== action.payload)\n});\nconst filterReducer = createReducer('', {\n  [addFilter]: (state, action) => action.payload\n});\nconst rootReducer = combineReducers({\n  items: contactsReducer,\n  filter: filterReducer\n});\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);","map":{"version":3,"sources":["/Users/pashtet/Documents/GitHub/goit-react-hw-06-phonebook/src/redux/reducers.js"],"names":["combineReducers","createReducer","persistReducer","storage","addContact","deleteContact","addFilter","persistConfig","key","blacklist","contactsReducer","state","action","payload","filter","contact","id","filterReducer","rootReducer","items","persistedReducer"],"mappings":"AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,UAAT,EAAqBC,aAArB,EAAoCC,SAApC,QAAqD,WAArD;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,UADe;AAEpBL,EAAAA,OAFoB;AAGpBM,EAAAA,SAAS,EAAE,CAAC,QAAD;AAHS,CAAtB;AAMA,MAAMC,eAAe,GAAGT,aAAa,CAAC,EAAD,EAAK;AACtC,GAACG,UAAD,GAAc,CAACO,KAAD,EAAQC,MAAR,KAAmB,CAAC,GAAGD,KAAJ,EAAWC,MAAM,CAACC,OAAlB,CADK;AAEtC,GAACR,aAAD,GAAiB,CAACM,KAAD,EAAQC,MAAR,KAAmBD,KAAK,CAACG,MAAN,CAAaC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeJ,MAAM,CAACC,OAA9C;AAFE,CAAL,CAArC;AAKA,MAAMI,aAAa,GAAGhB,aAAa,CAAC,EAAD,EAAK;AACpC,GAACK,SAAD,GAAa,CAACK,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC;AADH,CAAL,CAAnC;AAIA,MAAMK,WAAW,GAAGlB,eAAe,CAAC;AAAEmB,EAAAA,KAAK,EAAET,eAAT;AAA0BI,EAAAA,MAAM,EAAEG;AAAlC,CAAD,CAAnC;AACA,OAAO,MAAMG,gBAAgB,GAAGlB,cAAc,CAACK,aAAD,EAAgBW,WAAhB,CAAvC","sourcesContent":["import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { addContact, deleteContact, addFilter } from './actions';\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n}\n\nconst contactsReducer = createReducer([], {\n    [addContact]: (state, action) => [...state, action.payload],\n    [deleteContact]: (state, action) => state.filter(contact => contact.id !== action.payload),\n});\n\nconst filterReducer = createReducer('', {\n    [addFilter]: (state, action) => action.payload,\n});\n\nconst rootReducer = combineReducers({ items: contactsReducer, filter: filterReducer });\nexport const persistedReducer = persistReducer(persistConfig, rootReducer);\n"]},"metadata":{},"sourceType":"module"}