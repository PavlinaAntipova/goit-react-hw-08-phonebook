{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nconst initialState = [];\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState,\n  reducers: {\n    addContacts(state, action) {\n      return [...state, action.payback];\n    },\n\n    deleteContacts(state, action) {\n      return state.filter(contact => contact.id !== action.payload);\n    }\n\n  }\n});\nconst filterSlice = createSlice({\n  name: 'filter',\n  initialState,\n  reducers: {\n    addFilter(_, action) {\n      return action.payload;\n    }\n\n  }\n});\nexport const {\n  addContacts,\n  deleteContacts\n} = contactsSlice.actions;\nexport const {\n  addFilter\n} = filterSlice.actions;\nexport const rootReducer = combineReducers({\n  items: contactsSlice.reducer,\n  filter: filterSlice.reducer\n});","map":{"version":3,"sources":["/Users/pashtet/Documents/GitHub/goit-react-hw-07-phonebook/src/redux/slices.js"],"names":["createSlice","combineReducers","initialState","contactsSlice","name","reducers","addContacts","state","action","payback","deleteContacts","filter","contact","id","payload","filterSlice","addFilter","_","actions","rootReducer","items","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,MAAMC,YAAY,GAAG,EAArB;AAEA,MAAMC,aAAa,GAAGH,WAAW,CAAC;AAC9BI,EAAAA,IAAI,EAAE,UADwB;AAE9BF,EAAAA,YAF8B;AAG9BG,EAAAA,QAAQ,EAAE;AACNC,IAAAA,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACvB,aAAO,CAAC,GAAGD,KAAJ,EAAWC,MAAM,CAACC,OAAlB,CAAP;AACH,KAHK;;AAINC,IAAAA,cAAc,CAACH,KAAD,EAAQC,MAAR,EAAgB;AAC1B,aAAOD,KAAK,CAACI,MAAN,CAAaC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeL,MAAM,CAACM,OAA9C,CAAP;AACH;;AANK;AAHoB,CAAD,CAAjC;AAaA,MAAMC,WAAW,GAAGf,WAAW,CAAC;AAC5BI,EAAAA,IAAI,EAAE,QADsB;AAE5BF,EAAAA,YAF4B;AAG5BG,EAAAA,QAAQ,EAAE;AACNW,IAAAA,SAAS,CAACC,CAAD,EAAIT,MAAJ,EAAY;AACjB,aAAOA,MAAM,CAACM,OAAd;AACH;;AAHK;AAHkB,CAAD,CAA/B;AAUA,OAAO,MAAM;AAAER,EAAAA,WAAF;AAAeI,EAAAA;AAAf,IAAkCP,aAAa,CAACe,OAAtD;AACP,OAAO,MAAM;AAAEF,EAAAA;AAAF,IAAgBD,WAAW,CAACG,OAAlC;AAEP,OAAO,MAAMC,WAAW,GAAGlB,eAAe,CAAC;AAAEmB,EAAAA,KAAK,EAAEjB,aAAa,CAACkB,OAAvB;AAAgCV,EAAAA,MAAM,EAAEI,WAAW,CAACM;AAApD,CAAD,CAAnC","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\n\nconst initialState = [];\n\nconst contactsSlice = createSlice({\n    name: 'contacts',\n    initialState,\n    reducers: {\n        addContacts(state, action) {\n            return [...state, action.payback];\n        },\n        deleteContacts(state, action) {\n            return state.filter(contact => contact.id !== action.payload);\n        }\n    },\n});\n\nconst filterSlice = createSlice({\n    name: 'filter',\n    initialState,\n    reducers: {\n        addFilter(_, action) {\n            return action.payload;\n        },\n    },\n});\n\nexport const { addContacts, deleteContacts } = contactsSlice.actions;\nexport const { addFilter } = filterSlice.actions;\n\nexport const rootReducer = combineReducers({ items: contactsSlice.reducer, filter: filterSlice.reducer });\n"]},"metadata":{},"sourceType":"module"}