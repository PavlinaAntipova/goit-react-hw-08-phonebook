{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { registration, logout, login, refresh } from './auth-operations';\nconst initialState = {\n  user: {\n    name: null,\n    email: null\n  },\n  token: null,\n  isLoggedIn: false,\n  isFetchingCurrentUser: false\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [registration.fulfilled](state, action) {\n      state.user = action.payload;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n\n    [login.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n\n    [logout.fulfilled](state) {\n      state.user = {\n        name: null,\n        email: null\n      };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n\n    [refresh.pending](state) {\n      state.isFetchingCurrentUser = true;\n    },\n\n    [refresh.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isFetchingCurrentUser = false;\n    },\n\n    [refresh.rejected](state) {\n      state.isFetchingCurrentUser = false;\n    }\n\n  }\n});\nexport const authReducer = authSlice.reducer;","map":{"version":3,"sources":["/Users/pashtet/Documents/GitHub/goit-react-hw-08-phonebook/src/redux/auth/auth-slice.js"],"names":["createSlice","registration","logout","login","refresh","initialState","user","name","email","token","isLoggedIn","isFetchingCurrentUser","authSlice","reducers","extraReducers","fulfilled","state","action","payload","pending","rejected","authReducer","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,YAAT,EAAuBC,MAAvB,EAA+BC,KAA/B,EAAsCC,OAAtC,QAAqD,mBAArD;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,IAAI,EAAE,IAAR;AAAcC,IAAAA,KAAK,EAAE;AAArB,GADa;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,UAAU,EAAE,KAHO;AAInBC,EAAAA,qBAAqB,EAAE;AAJJ,CAArB;AAOA,MAAMC,SAAS,GAAGZ,WAAW,CAAC;AAC1BO,EAAAA,IAAI,EAAE,MADoB;AAE1BF,EAAAA,YAF0B;AAG1BQ,EAAAA,QAAQ,EAAE,EAHgB;AAI5BC,EAAAA,aAAa,EAAE;AACb,KAACb,YAAY,CAACc,SAAd,EAA0BC,KAA1B,EAAiCC,MAAjC,EAAyC;AACvCD,MAAAA,KAAK,CAACV,IAAN,GAAaW,MAAM,CAACC,OAApB;AACAF,MAAAA,KAAK,CAACP,KAAN,GAAcQ,MAAM,CAACC,OAAP,CAAeT,KAA7B;AACAO,MAAAA,KAAK,CAACN,UAAN,GAAmB,IAAnB;AACD,KALY;;AAMb,KAACP,KAAK,CAACY,SAAP,EAAkBC,KAAlB,EAAyBC,MAAzB,EAAiC;AAC/BD,MAAAA,KAAK,CAACV,IAAN,GAAaW,MAAM,CAACC,OAAP,CAAeZ,IAA5B;AACAU,MAAAA,KAAK,CAACP,KAAN,GAAcQ,MAAM,CAACC,OAAP,CAAeT,KAA7B;AACAO,MAAAA,KAAK,CAACN,UAAN,GAAmB,IAAnB;AACD,KAVY;;AAWb,KAACR,MAAM,CAACa,SAAR,EAAmBC,KAAnB,EAA0B;AACxBA,MAAAA,KAAK,CAACV,IAAN,GAAa;AAAEC,QAAAA,IAAI,EAAE,IAAR;AAAcC,QAAAA,KAAK,EAAE;AAArB,OAAb;AACAQ,MAAAA,KAAK,CAACP,KAAN,GAAc,IAAd;AACAO,MAAAA,KAAK,CAACN,UAAN,GAAmB,KAAnB;AACD,KAfY;;AAgBb,KAACN,OAAO,CAACe,OAAT,EAAkBH,KAAlB,EAAyB;AACvBA,MAAAA,KAAK,CAACL,qBAAN,GAA8B,IAA9B;AACD,KAlBY;;AAmBb,KAACP,OAAO,CAACW,SAAT,EAAoBC,KAApB,EAA2BC,MAA3B,EAAmC;AACjCD,MAAAA,KAAK,CAACV,IAAN,GAAaW,MAAM,CAACC,OAApB;AACAF,MAAAA,KAAK,CAACN,UAAN,GAAmB,IAAnB;AACAM,MAAAA,KAAK,CAACL,qBAAN,GAA8B,KAA9B;AACD,KAvBY;;AAwBb,KAACP,OAAO,CAACgB,QAAT,EAAmBJ,KAAnB,EAA0B;AACxBA,MAAAA,KAAK,CAACL,qBAAN,GAA8B,KAA9B;AACD;;AA1BY;AAJa,CAAD,CAA7B;AAkCA,OAAO,MAAMU,WAAW,GAAGT,SAAS,CAACU,OAA9B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { registration, logout, login, refresh } from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isFetchingCurrentUser: false,\n};\n\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {},\n  extraReducers: {\n    [registration.fulfilled] (state, action) {\n      state.user = action.payload;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [login.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    [logout.fulfilled](state) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [refresh.pending](state) {\n      state.isFetchingCurrentUser = true;\n    },\n    [refresh.fulfilled](state, action) {\n      state.user = action.payload;\n      state.isLoggedIn = true;\n      state.isFetchingCurrentUser = false;\n    },\n    [refresh.rejected](state) {\n      state.isFetchingCurrentUser = false;\n    },\n    }\n});\n\nexport const authReducer = authSlice.reducer;\n\n"]},"metadata":{},"sourceType":"module"}