{"ast":null,"code":"import React,{useEffect}from'react';import{useDispatch,useSelector}from'react-redux';import{getContacts}from'redux/contacts/contacts-operations';import{BallTriangle}from'react-loader-spinner';import ContactItem from'../ContactItem';import s from'./ContactsList.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function ContactsList(){var filter=useSelector(function(state){return state.contacts.filter;});var isLoading=useSelector(function(state){return state.contacts.isLoading;});var error=useSelector(function(state){return state.contacts.error;});var contacts=useSelector(function(state){var initState=state.contacts.items;var normalizeName=filter.toLocaleLowerCase();var filteredContacts=initState.filter(function(contact){return contact.name.toLocaleLowerCase().includes(normalizeName);});return filteredContacts;});var dispatch=useDispatch();useEffect(function(){dispatch(getContacts());},[dispatch]);return/*#__PURE__*/_jsxs(\"div\",{className:s.Contacts,children:[/*#__PURE__*/_jsx(\"h2\",{className:s.title,children:\"Contacts\"}),isLoading&&/*#__PURE__*/_jsx(BallTriangle,{color:\"#00BFFF\",height:100,width:100}),error&&/*#__PURE__*/_jsx(\"p\",{children:\"Opps, something went wrong\"}),!contacts.length&&!isLoading&&!error&&/*#__PURE__*/_jsx(\"p\",{children:\"No contacts here\"}),contacts.length>0&&!isLoading&&/*#__PURE__*/_jsx(\"ul\",{children:contacts.map(function(contact){return/*#__PURE__*/_jsx(ContactItem,{id:contact.id,name:contact.name,number:contact.phone},contact.id);})})]});}export default ContactsList;","map":{"version":3,"sources":["/Users/pashtet/Documents/GitHub/goit-react-hw-08-phonebook/src/components/ContactsList/ContactsList.jsx"],"names":["React","useEffect","useDispatch","useSelector","getContacts","BallTriangle","ContactItem","s","ContactsList","filter","state","contacts","isLoading","error","initState","items","normalizeName","toLocaleLowerCase","filteredContacts","contact","name","includes","dispatch","Contacts","title","length","map","id","phone"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,WAAT,KAA4B,oCAA5B,CACA,OAASC,YAAT,KAA8B,sBAA9B,CAGA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CACA,MAAOC,CAAAA,CAAP,KAAc,2BAAd,C,wFAEA,QAASC,CAAAA,YAAT,EAAwB,CACtB,GAAMC,CAAAA,MAAM,CAAGN,WAAW,CAAC,SAAAO,KAAK,QAAIA,CAAAA,KAAK,CAACC,QAAN,CAAeF,MAAnB,EAAN,CAA1B,CACA,GAAMG,CAAAA,SAAS,CAAGT,WAAW,CAAC,SAAAO,KAAK,QAAIA,CAAAA,KAAK,CAACC,QAAN,CAAeC,SAAnB,EAAN,CAA7B,CACA,GAAMC,CAAAA,KAAK,CAAGV,WAAW,CAAC,SAAAO,KAAK,QAAIA,CAAAA,KAAK,CAACC,QAAN,CAAeE,KAAnB,EAAN,CAAzB,CAEA,GAAMF,CAAAA,QAAQ,CAAGR,WAAW,CAAC,SAAAO,KAAK,CAAI,CACpC,GAAMI,CAAAA,SAAS,CAAGJ,KAAK,CAACC,QAAN,CAAeI,KAAjC,CACE,GAAMC,CAAAA,aAAa,CAAGP,MAAM,CAACQ,iBAAP,EAAtB,CACA,GAAMC,CAAAA,gBAAgB,CAAGJ,SAAS,CAACL,MAAV,CAAiB,SAAAU,OAAO,QACjDA,CAAAA,OAAO,CAACC,IAAR,CAAaH,iBAAb,GAAiCI,QAAjC,CAA0CL,aAA1C,CADiD,EAAxB,CAAzB,CAEF,MAAOE,CAAAA,gBAAP,CACD,CAN2B,CAA5B,CAOA,GAAMI,CAAAA,QAAQ,CAAGpB,WAAW,EAA5B,CAIAD,SAAS,CAAC,UAAM,CACdqB,QAAQ,CAAClB,WAAW,EAAZ,CAAR,CACD,CAFQ,CAEN,CAACkB,QAAD,CAFM,CAAT,CAKA,mBACE,aAAK,SAAS,CAAEf,CAAC,CAACgB,QAAlB,wBACE,WAAI,SAAS,CAAEhB,CAAC,CAACiB,KAAjB,sBADF,CAGGZ,SAAS,eAAI,KAAC,YAAD,EAAc,KAAK,CAAC,SAApB,CAA8B,MAAM,CAAE,GAAtC,CAA2C,KAAK,CAAE,GAAlD,EAHhB,CAIGC,KAAK,eAAI,iDAJZ,CAKG,CAACF,QAAQ,CAACc,MAAV,EAAoB,CAACb,SAArB,EAAkC,CAACC,KAAnC,eAA2C,uCAL9C,CAMGF,QAAQ,CAACc,MAAT,CAAkB,CAAlB,EAAuB,CAACb,SAAxB,eAAqC,oBAAMD,QAAQ,CAACe,GAAT,CAAa,SAAAP,OAAO,qBAC1D,KAAC,WAAD,EAEI,EAAE,CAAEA,OAAO,CAACQ,EAFhB,CAGI,IAAI,CAAER,OAAO,CAACC,IAHlB,CAII,MAAM,CAAED,OAAO,CAACS,KAJpB,EACST,OAAO,CAACQ,EADjB,CAD0D,EAApB,CAAN,EANxC,GADF,CAkBD,CAED,cAAenB,CAAAA,YAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getContacts } from 'redux/contacts/contacts-operations';\nimport { BallTriangle } from  'react-loader-spinner'\n\n\nimport ContactItem from '../ContactItem';\nimport s from './ContactsList.module.css';\n\nfunction ContactsList() {\n  const filter = useSelector(state => state.contacts.filter);\n  const isLoading = useSelector(state => state.contacts.isLoading);\n  const error = useSelector(state => state.contacts.error);\n\n  const contacts = useSelector(state => {\n    const initState = state.contacts.items;\n      const normalizeName = filter.toLocaleLowerCase();\n      const filteredContacts = initState.filter(contact =>\n      contact.name.toLocaleLowerCase().includes(normalizeName));\n    return filteredContacts;\n  });\n  const dispatch = useDispatch();\n\n\n\n  useEffect(() => {\n    dispatch(getContacts());\n  }, [dispatch]);\n\n  \n  return (\n    <div className={s.Contacts}>\n      <h2 className={s.title}>Contacts</h2>\n\n      {isLoading && <BallTriangle color=\"#00BFFF\" height={100} width={100} />}\n      {error && <p>Opps, something went wrong</p>}\n      {!contacts.length && !isLoading && !error &&<p>No contacts here</p>}\n      {contacts.length > 0 && !isLoading && <ul>{ contacts.map(contact => (\n            <ContactItem\n                key={contact.id}\n                id={contact.id}\n                name={contact.name}\n                number={contact.phone}\n              />\n            )) }</ul>}\n  \n    </div>\n  );\n}\n\nexport default ContactsList;\n\n"]},"metadata":{},"sourceType":"module"}