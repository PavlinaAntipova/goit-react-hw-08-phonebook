{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport { fetchContactsOperation, deleteContactOperation, addContactOperation } from './contacts-operations';\nconst initialState = {\n  item: [],\n  filter: '',\n  isLoading: false,\n  error: null\n};\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState,\n  reducers: {\n    addFilter(state, action) {\n      state.filter = action.payload;\n    }\n\n  },\n  extraReducers: {\n    [fetchContactsOperation.fulfilled]: (_ref, action) => {\n      let {\n        items,\n        isLoading\n      } = _ref;\n      items = action.payload;\n      isLoading = false;\n    },\n    [deleteContactOperation.fulfilled]: (_ref2, action) => {\n      let {\n        items,\n        isLoading\n      } = _ref2;\n      items = items.filter(contact => contact.id !== action.payload.id);\n      isLoading = false;\n    },\n    [addContactOperation.fulfilled]: (_ref3, action) => {\n      let {\n        items,\n        isLoading\n      } = _ref3;\n      items = [...action.payload];\n      isLoading = false;\n    },\n    [fetchContactsOperation.rejected]: (state, error) => {\n      state.error = error;\n      state.isLoading = false;\n    },\n    [deleteContactOperation.rejected]: (state, error) => {\n      state.error = error;\n      state.isLoading = false;\n    },\n    [addContactOperation.rejected]: (state, error) => {\n      state.error = error;\n      state.isLoading = false;\n    }\n  }\n}); // const contactsSlice = createSlice({\n//     name: 'contacts',\n//     initialState : [],\n//     reducers: {},\n//     extraReducers: {\n//         [fetchContactsOperation.fulfilled]: (_, action) => action.payload,\n//         [deleteContactOperation.fulfilled]: (state, action) => filter(contact => contact.id !== action.payload.id),\n//         [addContactOperation.fulfilled]: (state, action) => [...state, action.payload],\n//     }\n// });\n// const filterSlice = createSlice({\n//     name: 'filter',\n//     initialState: '',\n//     reducers: {\n//         addFilter(_, action) {\n//             return action.payload;\n//         },\n//     }\n// });\n// const loadingSlice = createSlice({\n//     name: 'loading',\n//     initialState: false,\n//     reducers: {},\n//     extraReducers: {\n//         [fetchContactsOperation.pending]: () => true,\n//         [deleteContactOperation.pending]: () => true,\n//         [addContactOperation.pending]: () => true,\n//         [fetchContactsOperation.fulfilled]: () => false,\n//         [deleteContactOperation.fulfilled]: () => false,\n//         [addContactOperation.fulfilled]: () => false,\n//         [fetchContactsOperation.rejected]: () => false,\n//         [deleteContactOperation.rejected]: () => false,\n//         [addContactOperation.rejected]: () => false,\n//     }\n// });\n// const errorSlice = createSlice({\n//     name: 'error',\n//     initialState: null,\n//     reducers: {},\n//     extraReducers: {\n// [fetchContactsOperation.rejected]: (_, error) => error,\n// [deleteContactOperation.rejected]: (_, error) => error,\n// [addContactOperation.rejected]: (_, error) => error,\n//     }\n// });\n\nexport const {\n  addFilter\n} = contactsSlice.actions; // export const contactsReducer = combineReducers({ items: contactsSlice.reducer, isLoading: loadingSlice.reducer, error: errorSlice.reducer, filter: filterSlice.reducer });\n\nexport const contactsReducer = contactsSlice.reducer;","map":{"version":3,"sources":["/Users/pashtet/Documents/GitHub/goit-react-hw-08-phonebook/src/redux/contacts/contacts-slice.js"],"names":["createSlice","combineReducers","fetchContactsOperation","deleteContactOperation","addContactOperation","initialState","item","filter","isLoading","error","contactsSlice","name","reducers","addFilter","state","action","payload","extraReducers","fulfilled","items","contact","id","rejected","actions","contactsReducer","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,SAASC,sBAAT,EAAiCC,sBAAjC,EAAyDC,mBAAzD,QAAoF,uBAApF;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,EADa;AAEnBC,EAAAA,MAAM,EAAE,EAFW;AAGnBC,EAAAA,SAAS,EAAE,KAHQ;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,MAAMC,aAAa,GAAGV,WAAW,CAAC;AAC9BW,EAAAA,IAAI,EAAE,UADwB;AAE9BN,EAAAA,YAF8B;AAG9BO,EAAAA,QAAQ,EAAE;AACNC,IAAAA,SAAS,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACrBD,MAAAA,KAAK,CAACP,MAAN,GAAeQ,MAAM,CAACC,OAAtB;AACH;;AAHK,GAHoB;AAQ9BC,EAAAA,aAAa,EAAE;AACX,KAACf,sBAAsB,CAACgB,SAAxB,GAAoC,OAAuBH,MAAvB,KAAkC;AAAA,UAAjC;AAAEI,QAAAA,KAAF;AAASX,QAAAA;AAAT,OAAiC;AAAEW,MAAAA,KAAK,GAAGJ,MAAM,CAACC,OAAf;AAAwBR,MAAAA,SAAS,GAAG,KAAZ;AAAmB,KADxG;AAEX,KAACL,sBAAsB,CAACe,SAAxB,GAAoC,QAAuBH,MAAvB,KAAkC;AAAA,UAAjC;AAAEI,QAAAA,KAAF;AAASX,QAAAA;AAAT,OAAiC;AAAEW,MAAAA,KAAK,GAAGA,KAAK,CAACZ,MAAN,CAAaa,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeN,MAAM,CAACC,OAAP,CAAeK,EAAtD,CAAR;AAAmEb,MAAAA,SAAS,GAAG,KAAZ;AAAmB,KAFnJ;AAGX,KAACJ,mBAAmB,CAACc,SAArB,GAAiC,QAAuBH,MAAvB,KAAkC;AAAA,UAAjC;AAAEI,QAAAA,KAAF;AAASX,QAAAA;AAAT,OAAiC;AAAEW,MAAAA,KAAK,GAAG,CAAC,GAAGJ,MAAM,CAACC,OAAX,CAAR;AAA6BR,MAAAA,SAAS,GAAG,KAAZ;AAAmB,KAH1G;AAIX,KAACN,sBAAsB,CAACoB,QAAxB,GAAmC,CAACR,KAAD,EAAQL,KAAR,KAAkB;AAAEK,MAAAA,KAAK,CAACL,KAAN,GAAcA,KAAd;AAAqBK,MAAAA,KAAK,CAACN,SAAN,GAAkB,KAAlB;AAAyB,KAJ1F;AAKX,KAACL,sBAAsB,CAACmB,QAAxB,GAAmC,CAACR,KAAD,EAAQL,KAAR,KAAkB;AAAEK,MAAAA,KAAK,CAACL,KAAN,GAAcA,KAAd;AAAqBK,MAAAA,KAAK,CAACN,SAAN,GAAkB,KAAlB;AAAyB,KAL1F;AAMX,KAACJ,mBAAmB,CAACkB,QAArB,GAAgC,CAACR,KAAD,EAAQL,KAAR,KAAkB;AAAEK,MAAAA,KAAK,CAACL,KAAN,GAAcA,KAAd;AAAqBK,MAAAA,KAAK,CAACN,SAAN,GAAkB,KAAlB;AAAyB;AANvF;AARe,CAAD,CAAjC,C,CAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACQ;AACA;AACA;AACR;AACA;;AAIA,OAAO,MAAM;AAAEK,EAAAA;AAAF,IAAgBH,aAAa,CAACa,OAApC,C,CAEP;;AAEA,OAAO,MAAMC,eAAe,GAAGd,aAAa,CAACe,OAAtC","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport { fetchContactsOperation, deleteContactOperation, addContactOperation } from './contacts-operations';\n\nconst initialState = {\n  item: [],\n  filter: '',\n  isLoading: false,\n  error: null,\n};\n\nconst contactsSlice = createSlice({\n    name: 'contacts',\n    initialState,\n    reducers: {\n        addFilter(state, action) {\n            state.filter = action.payload\n        },\n    },\n    extraReducers: {\n        [fetchContactsOperation.fulfilled]: ({ items, isLoading }, action) => { items = action.payload; isLoading = false },\n        [deleteContactOperation.fulfilled]: ({ items, isLoading }, action) => { items = items.filter(contact => contact.id !== action.payload.id); isLoading = false },\n        [addContactOperation.fulfilled]: ({ items, isLoading }, action) => { items = [...action.payload]; isLoading = false },\n        [fetchContactsOperation.rejected]: (state, error) => { state.error = error; state.isLoading = false },\n        [deleteContactOperation.rejected]: (state, error) => { state.error = error; state.isLoading = false },\n        [addContactOperation.rejected]: (state, error) => { state.error = error; state.isLoading = false },\n    }\n});\n\n\n// const contactsSlice = createSlice({\n//     name: 'contacts',\n//     initialState : [],\n//     reducers: {},\n//     extraReducers: {\n//         [fetchContactsOperation.fulfilled]: (_, action) => action.payload,\n//         [deleteContactOperation.fulfilled]: (state, action) => filter(contact => contact.id !== action.payload.id),\n//         [addContactOperation.fulfilled]: (state, action) => [...state, action.payload],\n//     }\n// });\n\n\n// const filterSlice = createSlice({\n//     name: 'filter',\n//     initialState: '',\n//     reducers: {\n//         addFilter(_, action) {\n//             return action.payload;\n//         },\n//     }\n// });\n\n// const loadingSlice = createSlice({\n//     name: 'loading',\n//     initialState: false,\n//     reducers: {},\n//     extraReducers: {\n//         [fetchContactsOperation.pending]: () => true,\n//         [deleteContactOperation.pending]: () => true,\n//         [addContactOperation.pending]: () => true,\n//         [fetchContactsOperation.fulfilled]: () => false,\n//         [deleteContactOperation.fulfilled]: () => false,\n//         [addContactOperation.fulfilled]: () => false,\n//         [fetchContactsOperation.rejected]: () => false,\n//         [deleteContactOperation.rejected]: () => false,\n//         [addContactOperation.rejected]: () => false,\n\n//     }\n// });\n\n// const errorSlice = createSlice({\n//     name: 'error',\n//     initialState: null,\n//     reducers: {},\n//     extraReducers: {\n        // [fetchContactsOperation.rejected]: (_, error) => error,\n        // [deleteContactOperation.rejected]: (_, error) => error,\n        // [addContactOperation.rejected]: (_, error) => error,\n//     }\n// });\n\n\n\nexport const { addFilter } = contactsSlice.actions;\n\n// export const contactsReducer = combineReducers({ items: contactsSlice.reducer, isLoading: loadingSlice.reducer, error: errorSlice.reducer, filter: filterSlice.reducer });\n\nexport const contactsReducer = contactsSlice.reducer;"]},"metadata":{},"sourceType":"module"}