{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { registration } from './auth-operations';\nconst initialState = {\n  user: {\n    name: null,\n    email: null\n  },\n  token: null,\n  isLoggedIn: false,\n  isFetchingCurrentUser: false\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [registration.fulfilled](state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    }\n\n  }\n});\nexport const authReducer = authSlice.reducer; // export const authReducer = combineReducers({ items: contactsSlice.reducer, isLoading: loadingSlice.reducer, error: errorSlice.reducer, filter: filterSlice.reducer });","map":{"version":3,"sources":["/Users/pashtet/Documents/GitHub/goit-react-hw-08-phonebook/src/redux/auth/auth-slice.js"],"names":["createSlice","registration","initialState","user","name","email","token","isLoggedIn","isFetchingCurrentUser","authSlice","reducers","extraReducers","fulfilled","state","action","payload","authReducer","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,YAAT,QAA6B,mBAA7B;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,IAAI,EAAE,IAAR;AAAcC,IAAAA,KAAK,EAAE;AAArB,GADa;AAEnBC,EAAAA,KAAK,EAAE,IAFY;AAGnBC,EAAAA,UAAU,EAAE,KAHO;AAInBC,EAAAA,qBAAqB,EAAE;AAJJ,CAArB;AAQA,MAAMC,SAAS,GAAGT,WAAW,CAAC;AAC1BI,EAAAA,IAAI,EAAE,MADoB;AAE1BF,EAAAA,YAF0B;AAG1BQ,EAAAA,QAAQ,EAAE,EAHgB;AAI5BC,EAAAA,aAAa,EAAE;AACb,KAACV,YAAY,CAACW,SAAd,EAA0BC,KAA1B,EAAiCC,MAAjC,EAAyC;AACvCD,MAAAA,KAAK,CAACV,IAAN,GAAaW,MAAM,CAACC,OAAP,CAAeZ,IAA5B;AACAU,MAAAA,KAAK,CAACP,KAAN,GAAcQ,MAAM,CAACC,OAAP,CAAeT,KAA7B;AACAO,MAAAA,KAAK,CAACN,UAAN,GAAmB,IAAnB;AACD;;AALY;AAJa,CAAD,CAA7B;AAaA,OAAO,MAAMS,WAAW,GAAGP,SAAS,CAACQ,OAA9B,C,CAGP","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { registration } from './auth-operations';\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n  isFetchingCurrentUser: false,\n};\n\n\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {},\n  extraReducers: {\n    [registration.fulfilled] (state, action) {\n      state.user = action.payload.user;\n      state.token = action.payload.token;\n      state.isLoggedIn = true;\n    },\n    }\n});\n\nexport const authReducer = authSlice.reducer;\n\n\n// export const authReducer = combineReducers({ items: contactsSlice.reducer, isLoading: loadingSlice.reducer, error: errorSlice.reducer, filter: filterSlice.reducer });"]},"metadata":{},"sourceType":"module"}