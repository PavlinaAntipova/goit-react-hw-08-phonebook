{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nconst initialContactState = [];\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialContactState,\n  reducers: {\n    addContact(state, action) {\n      return [...state, action.payback];\n    },\n\n    deleteContact(state, action) {\n      return state.filter(contact => contact.id !== action.payload);\n    }\n\n  }\n});\nconst initialFilterState = '';\nconst filterSlice = createSlice({\n  name: 'filter',\n  initialFilterState,\n  reducers: {\n    addFilter(_, action) {\n      return action.payload;\n    }\n\n  }\n});\nexport const {\n  addContact,\n  deleteContact\n} = contactsSlice.actions;\nexport const {\n  addFilter\n} = filterSlice.actions;\nexport const rootReducer = combineReducers({\n  items: contactsSlice.reducer,\n  filter: filterSlice.reducer\n});","map":{"version":3,"sources":["/Users/pashtet/Documents/GitHub/goit-react-hw-07-phonebook/src/redux/slices.js"],"names":["createSlice","combineReducers","initialContactState","contactsSlice","name","reducers","addContact","state","action","payback","deleteContact","filter","contact","id","payload","initialFilterState","filterSlice","addFilter","_","actions","rootReducer","items","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,MAAMC,mBAAmB,GAAG,EAA5B;AAEA,MAAMC,aAAa,GAAGH,WAAW,CAAC;AAC9BI,EAAAA,IAAI,EAAE,UADwB;AAE9BF,EAAAA,mBAF8B;AAG9BG,EAAAA,QAAQ,EAAE;AACNC,IAAAA,UAAU,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACtB,aAAO,CAAC,GAAGD,KAAJ,EAAWC,MAAM,CAACC,OAAlB,CAAP;AACH,KAHK;;AAINC,IAAAA,aAAa,CAACH,KAAD,EAAQC,MAAR,EAAgB;AACzB,aAAOD,KAAK,CAACI,MAAN,CAAaC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeL,MAAM,CAACM,OAA9C,CAAP;AACH;;AANK;AAHoB,CAAD,CAAjC;AAaA,MAAMC,kBAAkB,GAAG,EAA3B;AAEA,MAAMC,WAAW,GAAGhB,WAAW,CAAC;AAC5BI,EAAAA,IAAI,EAAE,QADsB;AAE5BW,EAAAA,kBAF4B;AAG5BV,EAAAA,QAAQ,EAAE;AACNY,IAAAA,SAAS,CAACC,CAAD,EAAIV,MAAJ,EAAY;AACjB,aAAOA,MAAM,CAACM,OAAd;AACH;;AAHK;AAHkB,CAAD,CAA/B;AAUA,OAAO,MAAM;AAAER,EAAAA,UAAF;AAAcI,EAAAA;AAAd,IAAgCP,aAAa,CAACgB,OAApD;AACP,OAAO,MAAM;AAAEF,EAAAA;AAAF,IAAgBD,WAAW,CAACG,OAAlC;AAEP,OAAO,MAAMC,WAAW,GAAGnB,eAAe,CAAC;AAAEoB,EAAAA,KAAK,EAAElB,aAAa,CAACmB,OAAvB;AAAgCX,EAAAA,MAAM,EAAEK,WAAW,CAACM;AAApD,CAAD,CAAnC","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\n\nconst initialContactState = [];\n\nconst contactsSlice = createSlice({\n    name: 'contacts',\n    initialContactState,\n    reducers: {\n        addContact(state, action) {\n            return [...state, action.payback];\n        },\n        deleteContact(state, action) {\n            return state.filter(contact => contact.id !== action.payload);\n        }\n    },\n});\n\nconst initialFilterState = '';\n\nconst filterSlice = createSlice({\n    name: 'filter',\n    initialFilterState,\n    reducers: {\n        addFilter(_, action) {\n            return action.payload;\n        },\n    },\n});\n\nexport const { addContact, deleteContact } = contactsSlice.actions;\nexport const { addFilter } = filterSlice.actions;\n\nexport const rootReducer = combineReducers({ items: contactsSlice.reducer, filter: filterSlice.reducer });\n"]},"metadata":{},"sourceType":"module"}