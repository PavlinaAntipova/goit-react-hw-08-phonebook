{"ast":null,"code":"import axios from \"axios\";\nimport { createAsyncThunk } from '@reduxjs/toolkit';\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  }\n\n};\nexport const registration = createAsyncThunk('auth/registration', async (user, thunkAPI) => {\n  try {\n    const {\n      data\n    } = await axios.post('/users/signup', user);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    console.log(error);\n    return thunkAPI.rejectWithValue();\n  }\n});\nexport const login = createAsyncThunk('auth/login', async (user, thunkAPI) => {\n  try {\n    const {\n      data\n    } = await axios.post('/users/login', user);\n    token.set(data.token);\n    return data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue();\n  }\n});\nexport const logout = createAsyncThunk('auth/logout', async (_, thunkAPI) => {\n  try {\n    await axios.post('/users/logout');\n    token.unset();\n  } catch (error) {\n    return thunkAPI.rejectWithValue();\n  }\n});\nexport const refresh = createAsyncThunk('auth/refresh', async (_, thunkAPI) => {\n  const state = thunkAPI.getState();\n  const persistedToken = state.auth.token;\n\n  if (persistedToken === null) {\n    return thunkAPI.rejectWithValue();\n  }\n\n  token.set(persistedToken);\n\n  try {\n    const {\n      data\n    } = await axios.get('/users/current');\n    return data;\n  } catch (error) {\n    return thunkAPI.rejectWithValue();\n  }\n});","map":{"version":3,"sources":["/Users/pashtet/Documents/GitHub/goit-react-hw-08-phonebook/src/redux/auth/auth-operations.js"],"names":["axios","createAsyncThunk","defaults","baseURL","token","set","headers","common","Authorization","unset","registration","user","thunkAPI","data","post","error","console","log","rejectWithValue","login","logout","_","refresh","state","getState","persistedToken","auth","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,gBAAT,QAAiC,kBAAjC;AAEAD,KAAK,CAACE,QAAN,CAAeC,OAAf,GAAyB,uCAAzB;AAEA,MAAMC,KAAK,GAAG;AACZC,EAAAA,GAAG,CAACD,KAAD,EAAQ;AACTJ,IAAAA,KAAK,CAACE,QAAN,CAAeI,OAAf,CAAuBC,MAAvB,CAA8BC,aAA9B,GAA+C,UAASJ,KAAM,EAA9D;AACD,GAHW;;AAIZK,EAAAA,KAAK,GAAG;AACNT,IAAAA,KAAK,CAACE,QAAN,CAAeI,OAAf,CAAuBC,MAAvB,CAA8BC,aAA9B,GAA8C,EAA9C;AACD;;AANW,CAAd;AASA,OAAO,MAAME,YAAY,GAAGT,gBAAgB,CAAC,mBAAD,EAAsB,OAAOU,IAAP,EAAaC,QAAb,KAA0B;AACxF,MAAI;AACA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMb,KAAK,CAACc,IAAN,CAAW,eAAX,EAA4BH,IAA5B,CAAvB;AACAP,IAAAA,KAAK,CAACC,GAAN,CAAUQ,IAAI,CAACT,KAAf;AACA,WAAOS,IAAP;AACH,GAJD,CAIE,OAAOE,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,WAAOH,QAAQ,CAACM,eAAT,EAAP;AACF;AACJ,CAT2C,CAArC;AAWP,OAAO,MAAMC,KAAK,GAAGlB,gBAAgB,CAAC,YAAD,EAAe,OAAOU,IAAP,EAAaC,QAAb,KAA0B;AAC1E,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMb,KAAK,CAACc,IAAN,CAAW,cAAX,EAA2BH,IAA3B,CAAvB;AACFP,IAAAA,KAAK,CAACC,GAAN,CAAUQ,IAAI,CAACT,KAAf;AACA,WAAOS,IAAP;AACC,GAJD,CAIE,OAAOE,KAAP,EAAc;AACZ,WAAOH,QAAQ,CAACM,eAAT,EAAP;AACH;AACJ,CARoC,CAA9B;AAUP,OAAO,MAAME,MAAM,GAAGnB,gBAAgB,CAAC,aAAD,EAAgB,OAAOoB,CAAP,EAAUT,QAAV,KAAuB;AACzE,MAAI;AACD,UAAMZ,KAAK,CAACc,IAAN,CAAW,eAAX,CAAN;AACCV,IAAAA,KAAK,CAACK,KAAN;AACH,GAHD,CAGE,OAAOM,KAAP,EAAc;AACd,WAAOH,QAAQ,CAACM,eAAT,EAAP;AACD;AACJ,CAPqC,CAA/B;AASP,OAAO,MAAMI,OAAO,GAAGrB,gBAAgB,CACrC,cADqC,EAErC,OAAOoB,CAAP,EAAUT,QAAV,KAAuB;AACrB,QAAMW,KAAK,GAAGX,QAAQ,CAACY,QAAT,EAAd;AACA,QAAMC,cAAc,GAAGF,KAAK,CAACG,IAAN,CAAWtB,KAAlC;;AAEA,MAAIqB,cAAc,KAAK,IAAvB,EAA6B;AAC3B,WAAOb,QAAQ,CAACM,eAAT,EAAP;AACD;;AACCd,EAAAA,KAAK,CAACC,GAAN,CAAUoB,cAAV;;AAEF,MAAI;AACF,UAAM;AAAEZ,MAAAA;AAAF,QAAW,MAAMb,KAAK,CAAC2B,GAAN,CAAU,gBAAV,CAAvB;AACA,WAAOd,IAAP;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACd,WAAOH,QAAQ,CAACM,eAAT,EAAP;AACD;AACF,CAjBoC,CAAhC","sourcesContent":["import axios from \"axios\";\nimport { createAsyncThunk } from '@reduxjs/toolkit';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nexport const registration = createAsyncThunk('auth/registration', async (user, thunkAPI) => {\n    try {\n        const { data } = await axios.post('/users/signup', user);\n        token.set(data.token);\n        return data;\n    } catch (error) {\n        console.log(error);\n       return thunkAPI.rejectWithValue();\n    }\n});\n\nexport const login = createAsyncThunk('auth/login', async (user, thunkAPI) => {\n    try {\n      const { data } = await axios.post('/users/login', user);\n    token.set(data.token);\n    return data;\n    } catch (error) {\n        return thunkAPI.rejectWithValue();\n    }\n});\n\nexport const logout = createAsyncThunk('auth/logout', async (_, thunkAPI) => {\n    try {\n       await axios.post('/users/logout');\n        token.unset();\n    } catch (error) {\n      return thunkAPI.rejectWithValue();\n    }\n});\n\nexport const refresh = createAsyncThunk(\n  'auth/refresh',\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n\n    if (persistedToken === null) {\n      return thunkAPI.rejectWithValue();\n    }\n      token.set(persistedToken);\n      \n    try {\n      const { data } = await axios.get('/users/current');\n      return data;\n    } catch (error) {\n      return thunkAPI.rejectWithValue();\n    }\n  },\n);\n\n\n\n"]},"metadata":{},"sourceType":"module"}