{"ast":null,"code":"var _JSON$parse;\n\nimport { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { addContact, deleteContact, addFilter } from './actions';\nconst initContactsState = (_JSON$parse = JSON.parse(window.localStorage.getItem(\"contacts\"))) !== null && _JSON$parse !== void 0 ? _JSON$parse : [];\nconst contactsReducer = createReducer(initContactsState, {\n  [addContact]: (state, action) => [...state, action.payload],\n  [deleteContact]: (state, action) => state.filter(contact => contact.id !== action.payload)\n});\nconst filterReducer = createReducer('', {\n  [addFilter]: (state, action) => action.payload\n});\nexport const rootReducer = combineReducers({\n  items: contactsReducer,\n  filter: filterReducer\n});","map":{"version":3,"sources":["/Users/pashtet/Documents/GitHub/goit-react-hw-06-phonebook/src/redux/reducers.js"],"names":["combineReducers","createReducer","addContact","deleteContact","addFilter","initContactsState","JSON","parse","window","localStorage","getItem","contactsReducer","state","action","payload","filter","contact","id","filterReducer","rootReducer","items"],"mappings":";;AAAA,SAASA,eAAT,QAAgC,OAAhC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AAEA,SAASC,UAAT,EAAqBC,aAArB,EAAoCC,SAApC,QAAqD,WAArD;AAEA,MAAMC,iBAAiB,kBAAGC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,CAAX,CAAH,qDAA0D,EAAjF;AAEA,MAAMC,eAAe,GAAGV,aAAa,CAACI,iBAAD,EAAoB;AACrD,GAACH,UAAD,GAAc,CAACU,KAAD,EAAQC,MAAR,KAAmB,CAAC,GAAGD,KAAJ,EAAWC,MAAM,CAACC,OAAlB,CADoB;AAErD,GAACX,aAAD,GAAiB,CAACS,KAAD,EAAQC,MAAR,KAAmBD,KAAK,CAACG,MAAN,CAAaC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeJ,MAAM,CAACC,OAA9C;AAFiB,CAApB,CAArC;AAKA,MAAMI,aAAa,GAAGjB,aAAa,CAAC,EAAD,EAAK;AACpC,GAACG,SAAD,GAAa,CAACQ,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC;AADH,CAAL,CAAnC;AAIA,OAAO,MAAMK,WAAW,GAAGnB,eAAe,CAAC;AAAEoB,EAAAA,KAAK,EAAET,eAAT;AAA0BI,EAAAA,MAAM,EAAEG;AAAlC,CAAD,CAAnC","sourcesContent":["import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\n\nimport { addContact, deleteContact, addFilter } from './actions';\n\nconst initContactsState = JSON.parse(window.localStorage.getItem(\"contacts\")) ?? [];\n\nconst contactsReducer = createReducer(initContactsState, {\n    [addContact]: (state, action) => [...state, action.payload],\n    [deleteContact]: (state, action) => state.filter(contact => contact.id !== action.payload),\n});\n\nconst filterReducer = createReducer('', {\n    [addFilter]: (state, action) => action.payload,\n});\n\nexport const rootReducer = combineReducers({ items: contactsReducer, filter: filterReducer });"]},"metadata":{},"sourceType":"module"}