{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport { createAction, createReducer } from '@reduxjs/toolkit';\nexport const addContact = createAction('contacts/add');\nexport const deleteContact = createAction('contacts/delete');\nexport const addFilter = createAction('filter/add');\nconst contactsReducer = createReducer([], {\n  [addContact]: (state, action) => [...state, action.payload],\n  [deleteContact]: (state, action) => state.filter(contact => contact.id !== action.payload)\n});\nconst filterReducer = createReducer('', {\n  [addFilter]: (state, action) => action.payload\n});\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    filter: filterReducer\n  }\n});","map":{"version":3,"sources":["/Users/pashtet/Documents/GitHub/goit-react-hw-06-phonebook/src/redux/store.js"],"names":["configureStore","createAction","createReducer","addContact","deleteContact","addFilter","contactsReducer","state","action","payload","filter","contact","id","filterReducer","store","reducer","contacts"],"mappings":"AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,kBAA5C;AAEA,OAAO,MAAMC,UAAU,GAAGF,YAAY,CAAC,cAAD,CAA/B;AACP,OAAO,MAAMG,aAAa,GAAGH,YAAY,CAAC,iBAAD,CAAlC;AACP,OAAO,MAAMI,SAAS,GAAGJ,YAAY,CAAC,YAAD,CAA9B;AAEP,MAAMK,eAAe,GAAGJ,aAAa,CAAC,EAAD,EAAK;AACtC,GAACC,UAAD,GAAc,CAACI,KAAD,EAAQC,MAAR,KAAmB,CAAC,GAAGD,KAAJ,EAAWC,MAAM,CAACC,OAAlB,CADK;AAEtC,GAACL,aAAD,GAAiB,CAACG,KAAD,EAAQC,MAAR,KAAmBD,KAAK,CAACG,MAAN,CAAaC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeJ,MAAM,CAACC,OAA9C;AAFE,CAAL,CAArC;AAKA,MAAMI,aAAa,GAAGX,aAAa,CAAC,EAAD,EAAK;AACpC,GAACG,SAAD,GAAa,CAACE,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC;AADH,CAAL,CAAnC;AAKA,OAAO,MAAMK,KAAK,GAAGd,cAAc,CAAC;AAChCe,EAAAA,OAAO,EAAE;AACLC,IAAAA,QAAQ,EAAEV,eADL;AAELI,IAAAA,MAAM,EAAEG;AAFH;AADuB,CAAD,CAA5B","sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport { createAction, createReducer } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('contacts/add');\nexport const deleteContact = createAction('contacts/delete');\nexport const addFilter = createAction('filter/add');\n\nconst contactsReducer = createReducer([], {\n    [addContact]: (state, action) => [...state, action.payload],\n    [deleteContact]: (state, action) => state.filter(contact => contact.id !== action.payload),\n});\n\nconst filterReducer = createReducer('', {\n    [addFilter]: (state, action) => action.payload,\n});\n\n\nexport const store = configureStore({\n    reducer: {\n        contacts: contactsReducer,\n        filter: filterReducer\n    },\n});\n\n"]},"metadata":{},"sourceType":"module"}