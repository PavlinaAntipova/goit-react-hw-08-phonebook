{"ast":null,"code":"var _jsxFileName = \"/Users/pashtet/Documents/GitHub/goit-react-hw-08-phonebook/src/components/FormContacts/FormContacts.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contacts-operations';\nimport s from './FormContacts.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormContacts() {\n  _s();\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const checkingExistContact = contacts.find(contact => contact.name === name);\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: s.Form,\n    onSubmit: e => {\n      e.preventDefault();\n\n      if (checkingExistContact) {\n        alert(`${name} is already in the contacts!`);\n        reset();\n        return;\n      }\n\n      dispatch(addContact({\n        name,\n        number\n      }));\n      reset();\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: s.name,\n      children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        pattern: \"^[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]+(([' -][a-zA-Z\\u0430-\\u044F\\u0410-\\u042F ])?[a-zA-Z\\u0430-\\u044F\\u0410-\\u042F]*)*$\",\n        title: \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\",\n        placeholder: \"name goes here\",\n        required: true,\n        value: name,\n        onChange: e => {\n          setName(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: s.phone,\n      children: [\"Phone\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        name: \"number\",\n        pattern: \"\\\\+?\\\\d{1,4}?[-.\\\\s]?\\\\(?\\\\d{1,3}?\\\\)?[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,4}[-.\\\\s]?\\\\d{1,9}\",\n        title: \"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\",\n        placeholder: \"number goes here\",\n        required: true,\n        value: phone,\n        onChange: e => {\n          setPhone(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: s.button,\n      type: \"submit\",\n      children: \"Add Contact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n}\n\n_s(FormContacts, \"DDq9MLY3x2vJaqNDa/siPJZQCzU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = FormContacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormContacts\");","map":{"version":3,"sources":["/Users/pashtet/Documents/GitHub/goit-react-hw-08-phonebook/src/components/FormContacts/FormContacts.jsx"],"names":["React","useState","useSelector","useDispatch","addContact","s","FormContacts","dispatch","contacts","state","items","name","setName","number","setNumber","reset","checkingExistContact","find","contact","Form","e","preventDefault","alert","target","value","phone","setPhone","button"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,oCAA3B;AAEA,OAAOC,CAAP,MAAc,2BAAd;;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AACrC,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,QAAQ,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,QAAN,CAAeE,KAA3B,CAA5B;AAEA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACY,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,EAAD,CAApC;;AAEA,QAAMc,KAAK,GAAG,MAAM;AACZH,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,IAAAA,SAAS,CAAC,EAAD,CAAT;AACP,GAHD;;AAKA,QAAME,oBAAoB,GAAGR,QAAQ,CAACS,IAAT,CAAcC,OAAO,IAAIA,OAAO,CAACP,IAAR,KAAiBA,IAA1C,CAA7B;AACA,sBAEI;AACA,IAAA,SAAS,EAAEN,CAAC,CAACc,IADb;AAEA,IAAA,QAAQ,EAAEC,CAAC,IAAI;AACbA,MAAAA,CAAC,CAACC,cAAF;;AACA,UAAIL,oBAAJ,EAA0B;AACxBM,QAAAA,KAAK,CAAE,GAAEX,IAAK,8BAAT,CAAL;AACAI,QAAAA,KAAK;AACL;AACD;;AACDR,MAAAA,QAAQ,CAACH,UAAU,CAAC;AAAEO,QAAAA,IAAF;AAAQE,QAAAA;AAAR,OAAD,CAAX,CAAR;AACAE,MAAAA,KAAK;AACN,KAXD;AAAA,4BAaE;AAAO,MAAA,SAAS,EAAEV,CAAC,CAACM,IAApB;AAAA,sCAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,OAAO,EAAC,wHAHV;AAIE,QAAA,KAAK,EAAC,wIAJR;AAKE,QAAA,WAAW,EAAC,gBALd;AAME,QAAA,QAAQ,MANV;AAOE,QAAA,KAAK,EAAEA,IAPT;AAQE,QAAA,QAAQ,EAAES,CAAC,IAAI;AAACR,UAAAA,OAAO,CAAEQ,CAAC,CAACG,MAAF,CAASC,KAAX,CAAP;AAAyB;AAR3C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAbF,eA0BE;AAAO,MAAA,SAAS,EAAEnB,CAAC,CAACoB,KAApB;AAAA,uCAEE;AACE,QAAA,IAAI,EAAC,KADP;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,OAAO,EAAC,wFAHV;AAIE,QAAA,KAAK,EAAC,8FAJR;AAKE,QAAA,WAAW,EAAC,kBALd;AAME,QAAA,QAAQ,MANV;AAOE,QAAA,KAAK,EAAEA,KAPT;AAQE,QAAA,QAAQ,EAAEL,CAAC,IAAI;AAACM,UAAAA,QAAQ,CAAEN,CAAC,CAACG,MAAF,CAASC,KAAX,CAAR;AAA0B;AAR5C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YA1BF,eAuCE;AAAQ,MAAA,SAAS,EAAEnB,CAAC,CAACsB,MAArB;AAA6B,MAAA,IAAI,EAAC,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAvCF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AA8CD;;GA3DuBrB,Y;UACLH,W,EACAD,W;;;KAFKI,Y","sourcesContent":["import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contacts-operations';\n\nimport s from './FormContacts.module.css';\n\nexport default function FormContacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector((state) => state.contacts.items);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const reset = () => {\n          setName('');\n          setNumber('');\n  }\n\n  const checkingExistContact = contacts.find(contact => contact.name === name);\n  return (\n    \n      <form\n      className={s.Form}\n      onSubmit={e => {\n        e.preventDefault();\n        if (checkingExistContact) {\n          alert(`${name} is already in the contacts!`);\n          reset();\n          return;\n        }\n        dispatch(addContact({ name, number }));\n        reset();\n      }}\n      >\n        <label className={s.name}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            placeholder=\"name goes here\"\n            required\n            value={name}\n            onChange={e => {setName( e.target.value)}}\n          />\n        </label>\n        <label className={s.phone}>\n          Phone\n          <input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            placeholder=\"number goes here\"\n            required\n            value={phone}\n            onChange={e => {setPhone( e.target.value)}}\n          />\n        </label>\n        <button className={s.button} type=\"submit\">\n          Add Contact\n        </button>\n      </form>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}