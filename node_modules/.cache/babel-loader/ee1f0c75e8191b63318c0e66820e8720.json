{"ast":null,"code":"var _JSON$parse;\n\nimport { configureStore } from '@reduxjs/toolkit';\nimport { createAction, createReducer } from '@reduxjs/toolkit';\nimport { save, load } from \"redux-localstorage-simple\";\nexport const addContact = createAction('contacts/add');\nexport const deleteContact = createAction('contacts/delete');\nexport const addFilter = createAction('filter/add');\nconst initContactsState = (_JSON$parse = JSON.parse(window.localStorage.getItem(\"contacts\"))) !== null && _JSON$parse !== void 0 ? _JSON$parse : [];\nconst contactsReducer = createReducer(initContactsState, {\n  [addContact]: (state, action) => [...state, action.payload],\n  [deleteContact]: (state, action) => state.filter(contact => contact.id !== action.payload)\n});\nconst filterReducer = createReducer('', {\n  [addFilter]: (state, action) => action.payload\n});\nexport const store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    filter: filterReducer\n  }\n});","map":{"version":3,"sources":["/Users/pashtet/Documents/GitHub/goit-react-hw-06-phonebook/src/redux/store.js"],"names":["configureStore","createAction","createReducer","save","load","addContact","deleteContact","addFilter","initContactsState","JSON","parse","window","localStorage","getItem","contactsReducer","state","action","payload","filter","contact","id","filterReducer","store","reducer","contacts"],"mappings":";;AAAA,SAASA,cAAT,QAA+B,kBAA/B;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,kBAA5C;AACA,SAASC,IAAT,EAAeC,IAAf,QAA2B,2BAA3B;AAEA,OAAO,MAAMC,UAAU,GAAGJ,YAAY,CAAC,cAAD,CAA/B;AACP,OAAO,MAAMK,aAAa,GAAGL,YAAY,CAAC,iBAAD,CAAlC;AACP,OAAO,MAAMM,SAAS,GAAGN,YAAY,CAAC,YAAD,CAA9B;AAEP,MAAMO,iBAAiB,kBAAGC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,UAA5B,CAAX,CAAH,qDAA0D,EAAjF;AAEA,MAAMC,eAAe,GAAGZ,aAAa,CAACM,iBAAD,EAAoB;AACrD,GAACH,UAAD,GAAc,CAACU,KAAD,EAAQC,MAAR,KAAmB,CAAC,GAAGD,KAAJ,EAAWC,MAAM,CAACC,OAAlB,CADoB;AAErD,GAACX,aAAD,GAAiB,CAACS,KAAD,EAAQC,MAAR,KAAmBD,KAAK,CAACG,MAAN,CAAaC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeJ,MAAM,CAACC,OAA9C;AAFiB,CAApB,CAArC;AAKA,MAAMI,aAAa,GAAGnB,aAAa,CAAC,EAAD,EAAK;AACpC,GAACK,SAAD,GAAa,CAACQ,KAAD,EAAQC,MAAR,KAAmBA,MAAM,CAACC;AADH,CAAL,CAAnC;AAMA,OAAO,MAAMK,KAAK,GAAGtB,cAAc,CAAC;AAChCuB,EAAAA,OAAO,EAAE;AACLC,IAAAA,QAAQ,EAAEV,eADL;AAELI,IAAAA,MAAM,EAAEG;AAFH;AADuB,CAAD,CAA5B","sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\nimport { createAction, createReducer } from '@reduxjs/toolkit';\nimport { save, load } from \"redux-localstorage-simple\";\n\nexport const addContact = createAction('contacts/add');\nexport const deleteContact = createAction('contacts/delete');\nexport const addFilter = createAction('filter/add');\n\nconst initContactsState = JSON.parse(window.localStorage.getItem(\"contacts\")) ?? [];\n\nconst contactsReducer = createReducer(initContactsState, {\n    [addContact]: (state, action) => [...state, action.payload],\n    [deleteContact]: (state, action) => state.filter(contact => contact.id !== action.payload),\n});\n\nconst filterReducer = createReducer('', {\n    [addFilter]: (state, action) => action.payload,\n});\n\n\n\nexport const store = configureStore({\n    reducer: {\n        contacts: contactsReducer,\n        filter: filterReducer,\n    },\n});\n\n"]},"metadata":{},"sourceType":"module"}