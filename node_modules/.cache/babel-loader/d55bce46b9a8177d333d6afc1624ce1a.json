{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nconst initialState = {\n  items: [],\n  filter: ''\n};\nconst contactsSlice = createSlice({\n  name: 'contacts',\n  initialState,\n  reducers: {\n    addContact(state, action) {\n      state.items = [...state.items, action.payload];\n    },\n\n    deleteContact(state, action) {\n      return state.filter(contact => contact.id !== action.payload);\n    }\n\n  }\n});\nconst filterSlice = createSlice({\n  name: 'filter',\n  initialState,\n  reducers: {\n    addFilter(_, action) {\n      return action.payload;\n    }\n\n  }\n});\nexport const {\n  addContact,\n  deleteContact\n} = contactsSlice.actions;\nexport const {\n  addFilter\n} = filterSlice.actions;\nexport const rootReducer = combineReducers({\n  items: contactsSlice.reducer,\n  filter: filterSlice.reducer\n});","map":{"version":3,"sources":["/Users/pashtet/Documents/GitHub/goit-react-hw-07-phonebook/src/redux/slices.js"],"names":["createSlice","combineReducers","initialState","items","filter","contactsSlice","name","reducers","addContact","state","action","payload","deleteContact","contact","id","filterSlice","addFilter","_","actions","rootReducer","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,eAAT,QAAgC,OAAhC;AAEA,MAAMC,YAAY,GAAG;AAAEC,EAAAA,KAAK,EAAE,EAAT;AAAaC,EAAAA,MAAM,EAAE;AAArB,CAArB;AAEA,MAAMC,aAAa,GAAGL,WAAW,CAAC;AAC9BM,EAAAA,IAAI,EAAE,UADwB;AAE9BJ,EAAAA,YAF8B;AAG9BK,EAAAA,QAAQ,EAAE;AACNC,IAAAA,UAAU,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACtBD,MAAAA,KAAK,CAACN,KAAN,GAAc,CAAC,GAAGM,KAAK,CAACN,KAAV,EAAiBO,MAAM,CAACC,OAAxB,CAAd;AACH,KAHK;;AAINC,IAAAA,aAAa,CAACH,KAAD,EAAQC,MAAR,EAAgB;AACzB,aAAOD,KAAK,CAACL,MAAN,CAAaS,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeJ,MAAM,CAACC,OAA9C,CAAP;AACH;;AANK;AAHoB,CAAD,CAAjC;AAcA,MAAMI,WAAW,GAAGf,WAAW,CAAC;AAC5BM,EAAAA,IAAI,EAAE,QADsB;AAE5BJ,EAAAA,YAF4B;AAG5BK,EAAAA,QAAQ,EAAE;AACNS,IAAAA,SAAS,CAACC,CAAD,EAAIP,MAAJ,EAAY;AACjB,aAAOA,MAAM,CAACC,OAAd;AACH;;AAHK;AAHkB,CAAD,CAA/B;AAUA,OAAO,MAAM;AAAEH,EAAAA,UAAF;AAAcI,EAAAA;AAAd,IAAgCP,aAAa,CAACa,OAApD;AACP,OAAO,MAAM;AAAEF,EAAAA;AAAF,IAAgBD,WAAW,CAACG,OAAlC;AAEP,OAAO,MAAMC,WAAW,GAAGlB,eAAe,CAAC;AAAEE,EAAAA,KAAK,EAAEE,aAAa,CAACe,OAAvB;AAAgChB,EAAAA,MAAM,EAAEW,WAAW,CAACK;AAApD,CAAD,CAAnC","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\n\nconst initialState = { items: [], filter: ''};\n\nconst contactsSlice = createSlice({\n    name: 'contacts',\n    initialState,\n    reducers: {\n        addContact(state, action) {\n            state.items = [...state.items, action.payload];\n        },\n        deleteContact(state, action) {\n            return state.filter(contact => contact.id !== action.payload);\n        }\n    },\n});\n\n\nconst filterSlice = createSlice({\n    name: 'filter',\n    initialState,\n    reducers: {\n        addFilter(_, action) {\n            return action.payload;\n        },\n    },\n});\n\nexport const { addContact, deleteContact } = contactsSlice.actions;\nexport const { addFilter } = filterSlice.actions;\n\nexport const rootReducer = combineReducers({ items: contactsSlice.reducer, filter: filterSlice.reducer });\n"]},"metadata":{},"sourceType":"module"}